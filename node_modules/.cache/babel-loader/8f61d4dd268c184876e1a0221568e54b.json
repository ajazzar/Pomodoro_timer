{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajazz\\\\Desktop\\\\My_Class\\\\Bootcamp\\\\React-app\\\\Pomodoro\\\\Project_Pomodoro_timer_Qualified_1\\\\src\\\\pomodoro\\\\Display.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\nimport useInterval from '../utils/useInterval';\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\r\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */\n  return currentSession => {\n    if (currentSession.label === 'Focusing') {\n      return {\n        label: 'On Break',\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: 'Focusing',\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nexport default function Display(_ref) {\n  _s();\n\n  let {\n    isTimerRunning,\n    activeState,\n    session,\n    setSession\n  } = _ref;\n  let {\n    focusDuration,\n    breakDuration,\n    sessionActive\n  } = activeState;\n  let {\n    label,\n    timeRemaining\n  } = session;\n  const progress = 100 * (1 - timeRemaining / (label === 'Focusing' ? focusDuration * 60 : breakDuration * 60));\n  useInterval(() => {\n    if (timeRemaining === 0) {\n      new Audio('https://bigsoundbank.com/UPLOAD/mp3/1482.mp3').play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: sessionActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"session-title\",\n            children: [label, \" for\", ' ', label === 'Focusing' ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), ' ', \"minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            \"data-testid\": \"session-sub-title\",\n            children: [secondsToDuration(timeRemaining), \" remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), !isTimerRunning && /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Paused\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            style: {\n              height: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              role: \"progressbar\",\n              \"aria-valuemin\": \"0\",\n              \"aria-valuemax\": \"100\",\n              \"aria-valuenow\": progress // TODO: Increase aria-valuenow as elapsed time increases\n              ,\n              style: {\n                width: `${progress}%`\n              } // TODO: Increase width % as elapsed time increases\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Display, \"pgv8HMpMrAP7yI0t0MhsSmroZ6w=\", false, function () {\n  return [useInterval];\n});\n\n_c = Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["C:/Users/ajazz/Desktop/My_Class/Bootcamp/React-app/Pomodoro/Project_Pomodoro_timer_Qualified_1/src/pomodoro/Display.js"],"names":["React","minutesToDuration","secondsToDuration","useInterval","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Display","isTimerRunning","activeState","session","setSession","sessionActive","progress","Audio","play","height","width"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { minutesToDuration, secondsToDuration } from '../utils/duration'\r\nimport useInterval from '../utils/useInterval'\r\n\r\n/**\r\n * Update the session state with new state after each tick of the interval.\r\n * @param prevState\r\n *  the previous session state\r\n * @returns\r\n *  new session state with timing information updated.\r\n */\r\nfunction nextTick(prevState) {\r\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1)\r\n  return {\r\n    ...prevState,\r\n    timeRemaining,\r\n  }\r\n}\r\n\r\n/**\r\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\r\n * @param focusDuration\r\n *    the current focus duration\r\n * @param breakDuration\r\n *    the current break duration\r\n * @returns\r\n *  function to update the session state.\r\n */\r\nfunction nextSession(focusDuration, breakDuration) {\r\n  /**\r\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n   */\r\n  return (currentSession) => {\r\n    if (currentSession.label === 'Focusing') {\r\n      return {\r\n        label: 'On Break',\r\n        timeRemaining: breakDuration * 60,\r\n      }\r\n    }\r\n    return {\r\n      label: 'Focusing',\r\n      timeRemaining: focusDuration * 60,\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Display({\r\n  isTimerRunning,\r\n  activeState,\r\n  session,\r\n  setSession,\r\n}) {\r\n  let { focusDuration,\r\n        breakDuration,\r\n        sessionActive, } = activeState\r\n  let { label, timeRemaining } = session\r\n  const progress =\r\n    100 *\r\n    (1 -\r\n      timeRemaining /\r\n        (label === 'Focusing'\r\n          ? focusDuration * 60\r\n          : breakDuration * 60))\r\n  useInterval(\r\n    () => {\r\n      if (timeRemaining === 0) {\r\n        new Audio('https://bigsoundbank.com/UPLOAD/mp3/1482.mp3').play()\r\n        return setSession(\r\n          nextSession(focusDuration, breakDuration),\r\n        )\r\n      }\r\n      return setSession(nextTick)\r\n    },\r\n    isTimerRunning ? 1000 : null,\r\n  )\r\n  return (\r\n    <div>\r\n      {sessionActive && (\r\n        <div>\r\n          <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n              <h2 data-testid=\"session-title\">\r\n                {label} for{' '}\r\n                {label === 'Focusing'\r\n                  ? minutesToDuration(focusDuration)\r\n                  : minutesToDuration(breakDuration)}{' '}\r\n                minutes\r\n              </h2>\r\n\r\n              <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(timeRemaining)} remaining\r\n              </p>\r\n              {!isTimerRunning && <h2>Paused</h2>}\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-2\">\r\n            <div className=\"col\">\r\n              <div className=\"progress\" style={{ height: '20px' }}>\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                  aria-valuenow={progress} // TODO: Increase aria-valuenow as elapsed time increases\r\n                  style={{ width: `${progress}%` }} // TODO: Increase width % as elapsed time increases\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}